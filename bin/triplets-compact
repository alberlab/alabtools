#!/usr/bin/env python
from __future__ import print_function, division
import argparse
from tqdm import tqdm
import os
import zipfile
import sys

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Compacts a triplet directory in a zip file')
    parser.add_argument('directory', help='Directory holding npy files')
    parser.add_argument('zip', help='output zip archive')
    
    args = parser.parse_args()

    if not os.path.isdir(args.directory):
        print('Error: %s is not a directory.' % args.directory, file=sys.stderr)
        exit(1)
    else:
        import glob
        files = glob.glob(args.directory + '/triplets*.npy')
        if len(files) == 0:
            print('Error: cannot find triplets*.npy in %s ' % args.directory, file=sys.stderr)
            exit(1)

    zippath = os.path.dirname(files[0])
    n_struct = 0
    n_split = 0
    for f in files:
        if f.endswith('.npy'):
            f = f[:-4]
        s = f.split('.')
        n_split = max( int( s[-1] ), n_split )
        w = s[-2].split('s')[-1]
        n_struct = max( int(w), n_struct)
    
    n_struct += 1
    n_split += 1

    zf = os.path.join(args.directory, args.zip)
    zipf = zipfile.ZipFile(zf, 'w')
    for i in tqdm(range(n_struct), desc="Packing"):
        for j in range(n_split):
            file = os.path.join( args.directory, 'triplets%d.%d.npy' % (i, j) )
            zipf.write(file)
    zipf.close()
    print('', file=sys.stderr, end='')
    for i in tqdm(range(n_struct), desc='Deleting packed items'):
        for j in range(n_split):
            file = os.path.join( args.directory, 'triplets%d.%d.npy' % (i, j) )
            os.remove(file)